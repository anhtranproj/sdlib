#!/usr/bin/python

# run script for compiling verilog file our.v
# to execute simulation, run obj_dir/Vour

import sys, os

os.environ['VERILATOR_ROOT']='/xpliant/tools/verilator'
os.environ['PATH']+=':'+os.environ['VERILATOR_ROOT']
#export PATH=$VERILATOR_ROOT/bin:$PATH
os.environ['SYSTEMC_LIBDIR']='/xpliant/tools/systemc-2.2/lib-linux64'
includes="-Iobj_dir -I$VERILATOR_ROOT/include -I/usr/include/python2.7 -I/xpliant/tools/vcs/F-2011.12-3/include/"

basename = "bench_rrmux"

def verilate (basename, libdirs):
    cmd = "verilator -CFLAGS -fPIC -DSDLIB_CLOCKING=\"posedge clk\" -DSDLIB_DELAY=\"\" -Wall --cc %s.v" % basename
    for lib in libdirs:
        cmd += " -y %s" % lib

    os.system (cmd)
    os.chdir ("obj_dir")
    os.system ("make -f V%s.mk" % basename)
    os.chdir ("..")

#cd obj_dir
#make -j -f Vour.mk
#cd ..

verilate (basename,["/home/guy/Proj/sdlib/rtl/verilog/buffers","/home/guy/Proj/sdlib/rtl/verilog/memory"])
cfiles = ['sim_launch.cpp','sim_launch_wrap.c',os.environ['VERILATOR_ROOT']+'/share/verilator/include/verilated.cpp']

os.system ('swig -python sim_launch.i')
#g++ -fPIC -c sim_launch.cpp    $INCLUDES
#g++ -fPIC -c sim_launch_wrap.c -I/usr/include/python2.7/
#g++ -fPIC -c $VERILATOR_ROOT/share/verilator/include/verilated.cpp
#
for cfile in cfiles:
    os.system ("g++ -fPIC -c %s %s" % (cfile,includes))

os.system ("g++ -shared sim_launch.o sim_launch_wrap.o verilated.o obj_dir/V%s__ALL.a -o _vlaunch.so" % basename)

#python pytest.py

